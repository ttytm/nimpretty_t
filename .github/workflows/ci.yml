name: CI

on:
  workflow_dispatch:
  push:
    paths-ignore: ['**.md']
  pull_request:
    paths-ignore: ['**.md']

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name == 'main' && github.sha || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            artifact: nimpretty_t-linux-amd64
          - os: windows-latest
            artifact: nimpretty_t-windows-amd64.exe
          - os: macos-12
            artifact: nimpretty_t-macos-amd64
          - os: macos-latest
            artifact: nimpretty_t-macos-arm64
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Get Nim version
        id: nim-version
        shell: bash
        run: |
          nim_version=$(curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/nim-lang/nim/tags" \
            | jq -r '.[0].name')
          echo $nim_version
          echo "NIM_VERSION=$nim_version" >> $GITHUB_ENV
      - name: Cache choosenim
        id: cache-choosenim
        uses: actions/cache@v4
        with:
          path: ~/.choosenim
          key: ${{ matrix.os }}-choosenim-${{ env.NIM_VERSION }}
          restore-keys: ${{ matrix.os }}-choosenim-
      - name: Cache nimble
        id: cache-nimble
        uses: actions/cache@v4
        with:
          path: ~/.nimble
          key: ${{ matrix.os }}-nimble-${{ hashFiles('*.nimble') }}
          restore-keys: ${{ matrix.os }}-nimble-
      - name: Setup Nim
        uses: jiro4989/setup-nim-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Test
        if: runner.os != 'Windows'
        run: testament pattern 'tests/*.nim'
      - name: Build
        run: nimble build --verbose -d:release
      - name: Format self
        run: ./nimpretty_t -d src/nimpretty_t.nim
      - name: Prepare artifacts
        shell: bash
        run: mv nimpretty_t ${{ matrix.artifact }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact }}
          path: ${{ matrix.artifact }}
      - name: Generate release name from tag '${{ github.ref_name }}'
        if: github.ref_type == 'tag'
        shell: bash
        run: |
          # The used convention for tags is `v<major.minor.patch>`
          # For the release name it is `nimpretty_t <major.minor.patch>`.
          release_name="nimpretty_t ${GITHUB_REF_NAME:1}" # `v0.2.1` -> `nimpretty_t 0.2.1`
          echo "RELEASE_NAME=$release_name" >> $GITHUB_ENV
      - name: Release artifacts
        if: github.ref_type == 'tag'
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ matrix.artifact }}
          name: ${{ env.RELEASE_NAME }}
